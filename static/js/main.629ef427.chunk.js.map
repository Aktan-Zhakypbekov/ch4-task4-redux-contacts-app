{"version":3,"sources":["ListItem.jsx","HomePage.jsx","Nav.jsx","ContactPage.jsx","RouterSwitch.jsx","reduxFunctions/dataReducer.jsx","index.js"],"names":["ListItem","props","dispatch","useDispatch","navigate","useNavigate","toggleHeart","id","type","payload","className","src","obj","image","alt","firstName","lastName","favorite","onClick","e","target","classList","add","remove","city","country","phoneNumber","website","email","state","HomePage","data","useSelector","dataReducer","toggled","heartToggled","searchLaunched","useEffect","fetch","then","response","json","backBtn","document","createElement","textContent","addEventListener","querySelector","appendChild","onSubmit","term","preventDefault","console","log","firstChild","value","placeholder","required","filter","elem","searched","length","map","Nav","to","ContactForm","location","useLocation","contactInfo","validate","Yup","shape","min","max","matches","initialValues","validationSchema","values","saveContact","formik","error","touched","dirty","isValid","handleSubmit","name","htmlFor","component","ContactPage","RouterSwitch","path","element","sortAZ","a","b","allReducers","combineReducers","action","JSON","parse","localStorage","getItem","newArr","setItem","stringify","sort","reverse","findIndex","toLowerCase","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.629ef427.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport './ListItem.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router';\r\n\r\nconst ListItem = (props) => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  function toContactPage() {\r\n    navigate(`ch4-task4-redux-contacts-app/mainpage/${props.obj.id}`, {\r\n      state: props.obj,\r\n    });\r\n  }\r\n\r\n  function toggleHeart(id) {\r\n    dispatch({ type: 'TOGGLE_HEART', payload: id });\r\n  }\r\n\r\n  return (\r\n    <div className='list-item-cont'>\r\n      <div className='list-item-cont__item-img'>\r\n        <img src={props.obj.image} alt='img' />\r\n      </div>\r\n      <div className='list-item-cont__info'>\r\n        <div className='info__name'>\r\n          <div>{`${props.obj.firstName} ${props.obj.lastName}`}</div>\r\n          {props.obj.favorite ? (\r\n            <div\r\n              className='favorite-btn'\r\n              onClick={(e) => {\r\n                toggleHeart(props.obj.id);\r\n                if (props.obj.favorite) {\r\n                  e.target.classList.add('favorite-btn');\r\n                  e.target.classList.remove('not-favorite-btn');\r\n                } else {\r\n                  e.target.classList.add('not-favorite-btn');\r\n                  e.target.classList.remove('favorite-btn');\r\n                }\r\n              }}\r\n            ></div>\r\n          ) : (\r\n            <div\r\n              className='not-favorite-btn'\r\n              onClick={(e) => {\r\n                toggleHeart(props.obj.id);\r\n                if (props.obj.favorite) {\r\n                  e.target.classList.add('favorite-btn');\r\n                  e.target.classList.remove('not-favorite-btn');\r\n                } else {\r\n                  e.target.classList.add('not-favorite-btn');\r\n                  e.target.classList.remove('favorite-btn');\r\n                }\r\n              }}\r\n            ></div>\r\n          )}\r\n        </div>\r\n        <div className='info__small-details'>\r\n          <div className='info__small-details__adress'>\r\n            <div className='small-icon-cont'>\r\n              <img\r\n                src='https://image.similarpng.com/very-thumbnail/2021/01/Location-icon-design-on-transparent-background-PNG.png'\r\n                alt=''\r\n              />\r\n            </div>\r\n            <div>{`${props.obj.city}, ${props.obj.country}`}</div>\r\n          </div>\r\n          <div className='info__small-details__phone'>\r\n            <div className='small-icon-cont'>\r\n              <img\r\n                src='https://www.pngfind.com/pngs/m/66-666166_customer-service-telephone-numbers-svg-png-icon-free.png'\r\n                alt=''\r\n              />\r\n            </div>\r\n            <div>{props.obj.phoneNumber}</div>\r\n          </div>\r\n          <div className='info__small-details__website'>\r\n            <div className='small-icon-cont'>\r\n              <img\r\n                src='https://i.pinimg.com/736x/ea/b4/70/eab4700ec044e504ef73c3a6eb6b03e6.jpg'\r\n                alt=''\r\n              />\r\n            </div>\r\n            <div>{props.obj.website}</div>\r\n          </div>\r\n          <div className='info__small-details__email'>\r\n            <div className='small-icon-cont'>\r\n              <img\r\n                src='https://toppng.com/uploads/preview/email-icon-vector-circle-11549825158ieiklzfl8g.png'\r\n                alt=''\r\n              />\r\n            </div>\r\n            <div>{props.obj.email}</div>\r\n          </div>\r\n        </div>\r\n        <div className='info__btn-cont'>\r\n          <button onClick={toContactPage} className='info__btn-cont__btn'>\r\n            Show\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport ListItem from './ListItem';\n\nfunction HomePage() {\n  const dispatch = useDispatch();\n  const data = useSelector((state) => {\n    return state.dataReducer;\n  });\n  const toggled = useSelector((state) => {\n    return state.heartToggled;\n  });\n\n  const searchLaunched = useSelector((state) => {\n    return state.searchLaunched;\n  });\n\n  useEffect(() => {\n    fetch('https://my-json-server.typicode.com/RomanChasovitin/demo-api/users')\n      .then((response) => response.json())\n      .then((response) => {\n        dispatch({ type: 'DATA_FETCH', payload: response.data });\n      });\n  }, []);\n\n  useEffect(() => {\n    if (searchLaunched) {\n      let backBtn = document.createElement('button');\n      backBtn.className = 'back-btn';\n      backBtn.textContent = 'Back';\n      backBtn.addEventListener('click', (e) => {\n        cleanAllSearchedData();\n        cleanSearchedToFalse();\n      });\n      document.querySelector('.list-funcs__search-cont').appendChild(backBtn);\n    } else {\n      if (document.querySelector('.back-btn')) {\n        document.querySelector('.back-btn').remove();\n      }\n    }\n  }, [searchLaunched]);\n\n  function sortAZ() {\n    dispatch({ type: 'SORT_AZ' });\n  }\n  function sortZA() {\n    dispatch({ type: 'SORT_ZA' });\n  }\n  function toggleHeart() {\n    dispatch({ type: 'TOGGLE_HEART_MAIN' });\n  }\n  function launchSearch(term) {\n    dispatch({ type: 'LAUNCH_SEARCH', payload: term });\n  }\n  function alertSearchLaunched() {\n    dispatch({ type: 'ALERT_SEARCH_LAUNCHED' });\n  }\n  function cleanAllSearchedData() {\n    dispatch({ type: 'CLEAN_ALL_SEARCHED_DATA' });\n  }\n  function cleanSearchedToFalse() {\n    dispatch({ type: 'CLEAN_SEARCHED_TO_FALSE' });\n  }\n\n  return (\n    <div className='home-page'>\n      <div className='display'>\n        <div className='list-funcs'>\n          <div className='list-funcs__search-cont'>\n            <form\n              className='search-form1'\n              onSubmit={(e) => {\n                e.preventDefault();\n                console.log(e.target.firstChild.value);\n                launchSearch(e.target.firstChild.value);\n                alertSearchLaunched();\n              }}\n            >\n              <input\n                type='text'\n                className='list-funcs__search-cont__search'\n                placeholder='Enter the full name of the contact'\n                required\n              />\n              <button type='submit' className='search-btn'>\n                Search\n              </button>\n            </form>\n          </div>\n          <div className='list-funcs__funcs-cont'>\n            <div className='toggled-fav-cont'>\n              <div\n                className='list-funcs__funcs-cont__filter-favs toggled-fav'\n                onClick={(e) => {\n                  toggleHeart();\n                  if (!toggled) {\n                    e.target.classList.remove('toggled-fav');\n                    e.target.classList.add('toggled-fav-red');\n                  } else {\n                    e.target.classList.remove('toggled-fav-red');\n                    e.target.classList.add('toggled-fav');\n                  }\n                }}\n              ></div>\n            </div>\n\n            <button\n              className='list-funcs__funcs-cont__sort-a-z btn'\n              onClick={sortAZ}\n            >\n              A-Z\n            </button>\n            <button\n              className='list-funcs__funcs-cont__sort-z-a btn'\n              onClick={sortZA}\n            >\n              Z-A\n            </button>\n          </div>\n        </div>\n        <div className='list'>\n          {searchLaunched ? (\n            data.filter((elem) => elem.searched === true).length != 0 ? (\n              data.map((elem) => {\n                if (elem.searched) {\n                  //cleanAllSearchedData();\n                  return <ListItem obj={elem} key={elem.id} />;\n                }\n              })\n            ) : (\n              <p>Not Found</p>\n            )\n          ) : !toggled ? (\n            data.map((elem) => {\n              return <ListItem obj={elem} key={elem.id} />;\n            })\n          ) : (\n            data.map((elem) => {\n              if (elem.favorite) {\n                return <ListItem obj={elem} key={elem.id} />;\n              }\n            })\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <div className='nav'>\r\n      <div className='nav__logo'>\r\n        <div className='nav__logo__img-cont'>\r\n          <img src='https://www.pngkey.com/png/full/87-873887_call-phone-icon-gray-png.png' />\r\n        </div>\r\n        <div className='my-contacts'>MyContacts</div>\r\n      </div>\r\n      <Link className='nav__link' to='/'>\r\n        HomePage\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  function saveContact(values) {\r\n    dispatch({ type: 'SAVE_CONTACT', payload: values });\r\n  }\r\n\r\n  let location = useLocation();\r\n  let contactInfo = {\r\n    id: location.state.id,\r\n    firstName: location.state.firstName,\r\n    city: location.state.city,\r\n    phoneNumber: location.state.phoneNumber,\r\n    website: location.state.website,\r\n    lastName: location.state.lastName,\r\n    country: location.state.country,\r\n    email: location.state.email,\r\n    favorite: location.state.favorite,\r\n    image: location.state.image,\r\n    searched: location.state.searched,\r\n  };\r\n  const validate = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(2, 'First name should be at least 2 characters')\r\n      .max(30, 'First name cannot be longer than 30 characters')\r\n      .matches(/^([^0-9]*)$/, 'First name should not contain numbers')\r\n      .required('First name required'),\r\n    city: Yup.string()\r\n      .min(2, 'City should be at least 2 characters')\r\n      .max(50, 'City cannot be longer than 50 characters')\r\n      .matches(/^([^0-9]*)$/, 'City should not contain numbers')\r\n      .required('City required'),\r\n    phoneNumber: Yup.string()\r\n      .min(4, 'Phone number should be at least 4 characters')\r\n      .matches(/^[+]\\d+/, 'It should be a phone number starting with +')\r\n      .required('Phone number required'),\r\n    website: Yup.string()\r\n      .min(5, 'Website should be at least 5 characters')\r\n      .matches(/^[^.]+[.][^.]+.*[^.]$/, 'Invalid website format')\r\n      .required('Website required'),\r\n    lastName: Yup.string()\r\n      .min(2, 'Last name should be at least 2 characters')\r\n      .max(30, 'Lasst name cannot be longer than 30 characters')\r\n      .matches(/^([^0-9]*)$/, 'Last name should not contain numbers')\r\n      .required('Last name required'),\r\n    country: Yup.string()\r\n      .min(2, 'Country should be at least 2 characters')\r\n      .max(50, 'Country cannot be longer than 50 characters')\r\n      .matches(/^([^0-9]*)$/, 'Country should not contain numbers')\r\n      .required('Country required'),\r\n    email: Yup.string().email('Wrong email format').required('Email required'),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={contactInfo}\r\n      validationSchema={validate}\r\n      onSubmit={(values) => {\r\n        saveContact(values);\r\n        navigate('/');\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        const { error, touched, dirty, isValid, values } = formik;\r\n        return (\r\n          <Form\r\n            className='contact-info__contact-form'\r\n            onSubmit={formik.handleSubmit}\r\n          >\r\n            <div className='contact-info__contact-form__contact-img-cont'>\r\n              <div className='contact-info__contact-form__contact-img-cont__inner-cont'>\r\n                <img src={values.image} alt='img' />\r\n              </div>\r\n              <div className='heart-cont'>\r\n                <Field\r\n                  id='heart'\r\n                  name='favorite'\r\n                  className='contact-info__contact-form__contact-img-cont__heart-btn'\r\n                  type='checkbox'\r\n                />\r\n                <label htmlFor='heart'>❤</label>\r\n              </div>\r\n            </div>\r\n            <div className='contact-info__contact-form__columns-cont'>\r\n              <div className='contact-info__contact-form__columns-cont__column'>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='firstName'>First name</label>\r\n                    <Field\r\n                      name='firstName'\r\n                      className='first-name input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='firstName'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='city'>City</label>\r\n                    <Field\r\n                      name='city'\r\n                      className='city input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='city'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='phoneNumber'>Phone number</label>\r\n                    <Field\r\n                      name='phoneNumber'\r\n                      className='phone-number input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='phoneNumber'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='website'>Website</label>\r\n                    <Field\r\n                      name='website'\r\n                      className='website input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='website'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='contact-info__contact-form__columns-cont__column'>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='lastName'>Last name</label>\r\n                    <Field\r\n                      name='lastName'\r\n                      className='last-name input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='lastName'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='country'>Country</label>\r\n                    <Field\r\n                      name='country'\r\n                      className='country input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='country'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='contact-info__contact-form__columns-cont__column__field-cont'>\r\n                  <div className='contact-info__contact-form__columns-cont__column__field-cont__inner'>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <Field\r\n                      name='email'\r\n                      className='email input-field'\r\n                      type='text'\r\n                    />\r\n                    <ErrorMessage\r\n                      name='email'\r\n                      component='div'\r\n                      className='error-msg'\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className='save-contact-btn-cont'>\r\n                  <button className='save-contact-btn-cont__btn' type='submit'>\r\n                    Save Contact\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n    <div className='contact-page'>\r\n      <ContactForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport HomePage from './HomePage';\r\nimport Nav from './Nav';\r\nimport ContactPage from './ContactPage';\r\n\r\nfunction RouterSwitch() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className='main-cont'>\r\n        <Nav />\r\n        <Routes>\r\n          <Route path='/' element={<HomePage />} />\r\n          <Route path='/mainpage/:id' element={<ContactPage />} />\r\n        </Routes>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default RouterSwitch;\r\n","import { combineReducers } from 'redux';\r\n\r\nfunction sortAZ(a, b) {\r\n  if (a.firstName < b.firstName) {\r\n    return -1;\r\n  }\r\n  if (a.firstName > b.firstName) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction searchLaunched(state = false, action) {\r\n  if (action.type === 'ALERT_SEARCH_LAUNCHED') {\r\n    return true;\r\n  } else if (action.type === 'CLEAN_ALL_SEARCHED_DATA') {\r\n    return false;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction heartToggled(state = false, action) {\r\n  if (action.type === 'TOGGLE_HEART_MAIN') {\r\n    return !state;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction dataReducer(state = [], action) {\r\n  if (action.type === 'DATA_FETCH') {\r\n    if (JSON.parse(localStorage.getItem('data')).length != 0) {\r\n      let newArr = JSON.parse(localStorage.getItem('data'));\r\n      state = [...newArr];\r\n    } else {\r\n      let newArr = [...action.payload];\r\n      newArr = newArr.map((elem) => {\r\n        elem.favorite = false;\r\n        elem.searched = false;\r\n        return elem;\r\n      });\r\n      localStorage.setItem('data', JSON.stringify(newArr));\r\n      state = JSON.parse(localStorage.getItem('data'));\r\n    }\r\n    return state;\r\n  } else if (action.type === 'SORT_AZ') {\r\n    let newArr = [...state];\r\n    localStorage.setItem('data', JSON.stringify(newArr.sort(sortAZ)));\r\n    return newArr.sort(sortAZ);\r\n  } else if (action.type === 'SORT_ZA') {\r\n    let newArr = [...state];\r\n    localStorage.setItem('data', JSON.stringify(newArr.sort(sortAZ).reverse()));\r\n    return newArr.sort(sortAZ).reverse();\r\n  } else if (action.type === 'TOGGLE_HEART') {\r\n    let newArr = [...state];\r\n    newArr[newArr.findIndex((elem) => elem.id == action.payload)].favorite =\r\n      !newArr[newArr.findIndex((elem) => elem.id == action.payload)].favorite;\r\n    localStorage.setItem('data', JSON.stringify(newArr));\r\n    return newArr;\r\n  } else if (action.type === 'SAVE_CONTACT') {\r\n    let newArr = [...state];\r\n    newArr[newArr.findIndex((elem) => elem.id == action.payload.id)] = {\r\n      ...action.payload,\r\n    };\r\n    localStorage.setItem('data', JSON.stringify(newArr));\r\n    return newArr;\r\n  } else if (action.type === 'LAUNCH_SEARCH') {\r\n    let newArr = [...state];\r\n    newArr.map((elem) => (elem.searched = false));\r\n    if (\r\n      newArr.filter(\r\n        (elem) =>\r\n          `${elem.firstName} ${elem.lastName}`.toLowerCase() ==\r\n          action.payload.toLowerCase()\r\n      ).length != 0\r\n    ) {\r\n      newArr[\r\n        newArr.findIndex(\r\n          (elem) =>\r\n            `${elem.firstName} ${elem.lastName}`.toLowerCase() ==\r\n            action.payload.toLowerCase()\r\n        )\r\n      ].searched = true;\r\n    }\r\n    return newArr;\r\n  } else if (action.type === 'CLEAN_SEARCHED_TO_FALSE') {\r\n    let newArr = [...state];\r\n    newArr.map((elem) => (elem.searched = false));\r\n    return newArr;\r\n  }\r\n  return state;\r\n}\r\nconst allReducers = combineReducers({\r\n  heartToggled,\r\n  dataReducer,\r\n  searchLaunched,\r\n});\r\n\r\nexport default allReducers;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RouterSwitch from './RouterSwitch';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport allReducers from './reduxFunctions/dataReducer';\n\nlet store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <RouterSwitch />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}